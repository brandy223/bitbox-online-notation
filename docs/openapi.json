{
  "openapi": "3.0.3",
  "info": {
    "title": "BitBox API",
    "description": "Rust API for 360 Project notation online",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "paths": {
    "/promotions/": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Get all existing promotions",
        "description": "This endpoint returns all promotions in the database.",
        "operationId": "get_all_promotions_route",
        "responses": {
          "200": {
            "description": "All the returned promotions objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotion"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Create a new promotion",
        "description": "This endpoint creates a new promotion in the database.",
        "operationId": "create_promotion_route",
        "requestBody": {
          "description": "The new promotion object to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPromotion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Promotion created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      }
    },
    "/promotions/{id}": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Get a promotion by id",
        "description": "This endpoint returns the promotion with the specified id.",
        "operationId": "get_promotion_by_id_route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The promotion id to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the returned promotions objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "example": "Database record"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Promotions"
        ],
        "summary": "Update a promotion",
        "description": "This endpoint updates a promotion in the database.",
        "operationId": "update_promotion_route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The promotion id to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated promotion object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatedPromotion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Promotion updated successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "example": "Database record"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Promotions"
        ],
        "summary": "Delete a promotion",
        "description": "This endpoint deletes a promotion from the database.",
        "operationId": "delete_promotion_route",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The promotion id to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                },
                "example": "Database record"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      }
    },
    "/promotions/search": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Get a promotion by title and date",
        "description": "This endpoint returns the closest promotions to the specified title and date.",
        "operationId": "search_promotions_route",
        "requestBody": {
          "description": "The search parameters for the promotions",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSearchParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "All the returned promotions objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Promotion"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "examples": {
                  "InvalidToken": {
                    "value": "Error"
                  },
                  "NoToken": {
                    "value": "Token not provided"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Check if the API is online",
        "description": "This endpoint returns a simple message to check if the API is online.",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "API is online",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "description": "This endpoint allows users to register a new account.",
        "operationId": "register_route",
        "requestBody": {
          "description": "The credentials of the user to register",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserPostModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a user",
        "description": "This endpoint allows users to login to their account.",
        "operationId": "login_route",
        "requestBody": {
          "description": "The credentials of the user to login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserPostModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                },
                "example": "Unauthorized"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                },
                "example": "InternalError"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestError": {
        "type": "object",
        "required": [
          "request"
        ],
        "properties": {
          "request": {
            "type": "string"
          }
        }
      },
      "ForbiddenError": {
        "default": null,
        "nullable": true
      },
      "GenericResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "InternalError": {
        "default": null,
        "nullable": true
      },
      "LoginUserPostModel": {
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "properties": {
          "login": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "NewPromotion": {
        "type": "object",
        "required": [
          "title",
          "start_year",
          "end_year"
        ],
        "properties": {
          "end_year": {
            "type": "string",
            "format": "date"
          },
          "start_year": {
            "type": "string",
            "format": "date"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "required": [
          "resource"
        ],
        "properties": {
          "resource": {
            "type": "string"
          }
        }
      },
      "Promotion": {
        "type": "object",
        "required": [
          "id",
          "title",
          "start_year",
          "end_year"
        ],
        "properties": {
          "end_year": {
            "type": "string",
            "format": "date"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "start_year": {
            "type": "string",
            "format": "date"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "PromotionSearchParams": {
        "type": "object",
        "properties": {
          "end_year": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "start_year": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterUserPostModel": {
        "type": "object",
        "required": [
          "email",
          "username",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "UnauthorizedError": {
        "default": null,
        "nullable": true
      },
      "UpdatedPromotion": {
        "type": "object",
        "properties": {
          "end_year": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "start_year": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "required": [
          "field"
        ],
        "properties": {
          "field": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadRequestError": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "request"
              ],
              "properties": {
                "request": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ForbiddenError": {
        "description": ""
      },
      "InternalError": {
        "description": ""
      },
      "NotFoundError": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "resource"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UnauthorizedError": {
        "description": ""
      },
      "ValidationError": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "field"
              ],
              "properties": {
                "field": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "api_key": [
        "read",
        "write"
      ]
    }
  ]
}